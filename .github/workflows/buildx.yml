name: Deploy Docker Hub

on:
  push:
    branches: [ main ]
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-18.04
    env:
      IMAGE_FILE: Dockerfile
      IMAGE_NAME: sso-team
      KUBE_CONTAINER: deploy/touno-sso
      KUBE_NAMESPACE: web-api
      PLATFORMS: linux/amd64,linux/386,linux/arm64
    steps:
      - uses: actions/checkout@v2

      - name: Prepare üî∞
        id: prepare
        run: |
          echo ::set-output name=kube_container::${KUBE_CONTAINER}
          echo ::set-output name=kube_namespace::${KUBE_NAMESPACE}

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=v$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo ::set-output name=docker_image::${{github.actor}}/${IMAGE_NAME}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform $PLATFORMS \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VERSION=$VERSION \
            --tag ${{github.actor}}/$IMAGE_NAME:$VERSION --file $IMAGE_FILE .

      - name: Set up Docker Buildx üìê
        uses: docker/setup-buildx-action@v2

      - name: Docker Buildx ‚öôÔ∏è
        run: docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Push üìå
        if: success() && github.event_name != 'pull_request'
        run: docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Inspect üîç
        if: success() && github.event_name != 'pull_request'
        run: docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

      - name: Trigger deploy üöÄ
        if: success() && github.event_name != 'pull_request' && !contains(github.ref, 'main')
        uses: ladislas14/kubernetes-action@1.0.1
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: set image ${{ steps.prepare.outputs.kube_container }} touno-app=${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} -n ${{ steps.prepare.outputs.kube_namespace }}

      - name: Status deployment üîç
        if: success() && github.event_name != 'pull_request' && !contains(github.ref, 'main')
        uses: ladislas14/kubernetes-action@1.0.1
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout status ${{ steps.prepare.outputs.kube_container }} -n ${{ steps.prepare.outputs.kube_namespace }}
